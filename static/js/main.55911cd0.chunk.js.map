{"version":3,"sources":["components/Ui/index.jsx","components/Page/index.jsx","components/CSSVariableApplicator/index.jsx","components/UiToggle/index.jsx","components/MainPage/index.jsx","history.js","components/App/index.jsx","reportWebVitals.js","index.js"],"names":["Ui","changeText","event","props","target","value","changeWidth","changeHeight","changeTop","changeRight","changeBottom","changeLeft","changeBleed","changePrintscale","changeCropmark","changePScale","changeH1Scale","isVisible","this","visible","className","name","cols","rows","text","onChange","type","width","height","pScale","h1Scale","printscale","top","right","bottom","left","PureComponent","md","dataIn","data","split","tree","slice","i","length","match","title","replace","isEmpty","Page","map","CSSVariableApplicator","updateCSSVariables","variables","prevProps","Object","keys","forEach","key","document","documentElement","style","setProperty","children","Component","UiToggle","bool","isUiVisible","toggleClickHandler","onClick","urlPropsQueryConfig","UrlQueryParamTypes","string","number","bleed","cropmark","boolean","MainPage","onChangeIsUiVisible","onChangeText","onChangeWidth","onChangeHeight","onChangeTop","onChangeRight","onChangeBottom","onChangeLeft","onChangeBleed","onChangePrintscale","onChangeCropmark","onChangePScale","onChangeH1Scale","defaultProps","addUrlProps","history","createBrowserHistory","App","listen","forceUpdate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureUrlQuery","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55911cd0.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Ui.css\";\n\nclass Ui extends PureComponent {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n\n    text: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n    bottom: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    bleed: PropTypes.number.isRequired,\n    printscale: PropTypes.number.isRequired,\n    cropmark: PropTypes.bool.isRequired,\n\n    pScale: PropTypes.number.isRequired,\n    h1Scale: PropTypes.number.isRequired,\n\n    changeText: PropTypes.func.isRequired,\n    changeWidth: PropTypes.func.isRequired,\n    changeHeight: PropTypes.func.isRequired,\n    changeTop: PropTypes.func.isRequired,\n    changeRight: PropTypes.func.isRequired,\n    changeBottom: PropTypes.func.isRequired,\n    changeLeft: PropTypes.func.isRequired,\n    changeBleed: PropTypes.func.isRequired,\n    changePrintscale: PropTypes.func.isRequired,\n    changeCropmark: PropTypes.func.isRequired,\n    changePScale: PropTypes.func.isRequired,\n    changeH1Scale: PropTypes.func.isRequired,\n  };\n\n  changeText = (event) => {\n    this.props.changeText(event.target.value);\n  };\n  changeWidth = (event) => {\n    this.props.changeWidth(event.target.value);\n  };\n  changeHeight = (event) => {\n    this.props.changeHeight(event.target.value);\n  };\n  changeTop = (event) => {\n    this.props.changeTop(event.target.value);\n  };\n  changeRight = (event) => {\n    this.props.changeRight(event.target.value);\n  };\n  changeBottom = (event) => {\n    this.props.changeBottom(event.target.value);\n  };\n  changeLeft = (event) => {\n    this.props.changeLeft(event.target.value);\n  };\n  changeBleed = (event) => {\n    this.props.changeBleed(event.target.value);\n  };\n  changePrintscale = (event) => {\n    this.props.changePrintscale(event.target.value);\n  };\n  changeCropmark = (event) => {\n    this.props.changeCropmark(event.target.value);\n  };\n  changePScale = (event) => {\n    this.props.changePScale(event.target.value);\n  };\n  changeH1Scale = (event) => {\n    this.props.changeH1Scale(event.target.value);\n  };\n\n  render() {\n    let isVisible = \"\";\n    if (!this.props.visible) isVisible = \"hidden\";\n\n    return (\n      <div className={`ui ${isVisible}`}>\n        <div className=\"inner\">\n          <br />\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              Text <span className=\"value__valuerange\">separated by line</span>\n            </div>\n            <textarea\n              name=\"word\"\n              cols=\"40\"\n              rows=\"7\"\n              className=\"value__input\"\n              value={this.props.text}\n              onChange={this.changeText}\n            />\n            <div className=\"value__caption\">\n              {\" \"}\n              <span className=\"value__valuerange\">\n                Original margins: L:12 R:16 T:7 B:12\n              </span>\n            </div>\n          </div>\n\n          {/*\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              Cropmarks{\" \"}\n              <span className=\"value__valuerange\">true/false</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"checkbox\"\n              checked={this.props.cropmark}\n              onChange={this.changeCropmark}\n            />\n          </div>\n*/}\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              Width <span className=\"value__valuerange\">0–~</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"number\"\n              value={this.props.width}\n              onChange={this.changeWidth}\n            />\n          </div>\n\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              Height <span className=\"value__valuerange\">0–~</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"number\"\n              value={this.props.height}\n              onChange={this.changeHeight}\n            />\n          </div>\n\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              p-Scale <span className=\"value__valuerange\">0–~</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"number\"\n              value={this.props.pScale}\n              onChange={this.changePScale}\n            />\n          </div>\n\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              H1-Scale <span className=\"value__valuerange\">0–~</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"number\"\n              value={this.props.h1Scale}\n              onChange={this.changeH1Scale}\n            />\n          </div>\n\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              Scale for print <span className=\"value__valuerange\">0–~%</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"number\"\n              value={this.props.printscale}\n              onChange={this.changePrintscale}\n            />\n          </div>\n\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              top <span className=\"value__valuerange\">0–~</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"number\"\n              value={this.props.top}\n              onChange={this.changeTop}\n            />\n          </div>\n\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              right <span className=\"value__valuerange\">0–~</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"number\"\n              value={this.props.right}\n              onChange={this.changeRight}\n            />\n          </div>\n\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              bottom <span className=\"value__valuerange\">0–~</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"number\"\n              value={this.props.bottom}\n              onChange={this.changeBottom}\n            />\n          </div>\n\n          <div className=\"value\">\n            <div className=\"value__caption\">\n              left <span className=\"value__valuerange\">0–~</span>\n            </div>\n            <input\n              className=\"value__input\"\n              type=\"number\"\n              value={this.props.left}\n              onChange={this.changeLeft}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Ui;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Page.css\";\n\n// https://codereview.stackexchange.com/questions/84988/converting-file-from-markdown-like-markup-into-html-using-repeated-substitutions\nlet md = (dataIn) => {\n  // const md = function(dataIn) {\n  // turn the data into an array\n  let data = dataIn.split(/\\r?\\n/);\n\n  // make a clone of the array to be used in the if statements.\n  var tree = data.slice();\n\n  for (var i = 0; i < tree.length; ++i) {\n    // turn #s into heading tags if #s are present\n    if (tree[i].match(/^### /g)) {\n      let title = tree[i].replace(/^### (.*)/gm, \"$1\");\n      data[i] = <h3>{title}</h3>;\n    }\n    if (tree[i].match(/^## /g)) {\n      let title = tree[i].replace(/^## (.*)/gm, \"$1\");\n      data[i] = <h2>{title}</h2>;\n    }\n    if (tree[i].match(/^# /g)) {\n      let title = tree[i].replace(/^# (.*)/gm, \"$1\");\n      data[i] = <h1>{title}</h1>;\n    }\n\n    // turn * or ** into italics and bold if present\n    // if (tree[i].match(/\\*\\*|\\*/g)) {\n    //   data[i] = data[i]\n    //     .replace(/\\*\\*([^\\*|\\s]+)\\*\\*/g, <strong>----1---</strong>)\n    //     .replace(/\\*([^\\*|\\s]+)\\*/g, <em>----1---</em>);\n    // }\n\n    // surround every element with p tags if the\n    // element doesn't start with an #.\n    if (tree[i].match(/^[^#]/g)) {\n      data[i] = <p>{tree[i]}</p>;\n    }\n  }\n\n  // lastly, put the array together again to the saved as HTML\n  // data = data.join(\"\\n\");\n\n  return data;\n};\n\nlet isEmpty = (text) => {\n  if (text === \"\" || text === \"\\n\" || text === \"\\r\\n\") {\n    return \"empty\";\n  }\n  return \"normal\";\n};\n\nclass Page extends PureComponent {\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"cropMarks\">\n            <div className=\"cropMark cropMark--vertical\" />\n            <div className=\"cropMark cropMark--horizontal\" />\n          </div>\n          <div className=\"bleed\">\n            <div className=\"crop\">\n              <div className=\"content\">\n                <div className=\"designGrid\">\n                  {this.props.text\n                    .split(\"----\")\n                    .slice(0, 4)\n                    .map((text, i) => {\n                      return [\n                        <hr\n                          className={`frontline ${isEmpty(text)} section_${i}`}\n                        />,\n                        <div className={`box ${isEmpty(text)} section_${i}`}>\n                          <span>{md(text)}</span>\n                        </div>,\n                      ];\n                    })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPage.propTypes = {\n  // data: PropTypes.array.isRequired,\n  text: PropTypes.string.isRequired,\n  // rowNumber: PropTypes.number.isRequired,\n  // empty: PropTypes.string.isRequired\n};\n\nexport default Page;\n","import React, { Component } from \"react\";\n\nclass CSSVariableApplicator extends Component {\n  componentDidMount() {\n    this.updateCSSVariables(this.props.variables);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.variables !== prevProps.variables) {\n      this.updateCSSVariables(this.props.variables);\n    }\n  }\n  updateCSSVariables(variables) {\n    // console.log(\"updateCSSVariables\", variables);\n\n    Object.keys(variables).forEach(function (key) {\n      document.documentElement.style.setProperty(key, variables[key]);\n    });\n  }\n  render() {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nexport default CSSVariableApplicator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./UiToggle.css\";\n\nconst UiToggle = (props) => {\n  const { isUiVisible, toggleClickHandler } = props;\n  const toggleValue = (bool) => {\n    if (!bool) return `cog uiToggle`;\n    return `cross uiToggle`;\n  };\n  return (\n    <input\n      type=\"button\"\n      className={toggleValue(isUiVisible)}\n      value={\"\"}\n      onClick={toggleClickHandler}\n    />\n  );\n};\n\nUiToggle.propTypes = {\n  isUiVisible: PropTypes.bool.isRequired,\n  toggleClickHandler: PropTypes.func.isRequired,\n};\n\nexport default UiToggle;\n","import React, { PureComponent } from \"react\";\nimport { addUrlProps, UrlQueryParamTypes } from \"react-url-query\";\nimport PropTypes from \"prop-types\";\nimport \"./MainPage.css\";\nimport Ui from \"../Ui\";\nimport Page from \"../Page\";\nimport CSSVariableApplicator from \"../CSSVariableApplicator\";\nimport UiToggle from \"../UiToggle\";\n\nconst urlPropsQueryConfig = {\n  text: { type: UrlQueryParamTypes.string },\n  width: { type: UrlQueryParamTypes.number },\n  height: { type: UrlQueryParamTypes.number },\n  top: { type: UrlQueryParamTypes.number },\n  right: { type: UrlQueryParamTypes.number },\n  bottom: { type: UrlQueryParamTypes.number },\n  left: { type: UrlQueryParamTypes.number },\n  bleed: { type: UrlQueryParamTypes.number },\n  printscale: { type: UrlQueryParamTypes.number },\n  cropmark: { type: UrlQueryParamTypes.boolean },\n  isUiVisible: { type: UrlQueryParamTypes.boolean },\n\n  pScale: { type: UrlQueryParamTypes.number },\n  h1Scale: { type: UrlQueryParamTypes.number },\n};\n\nclass MainPage extends PureComponent {\n  static propTypes = {\n    // URL props are automatically decoded and passed in based on the config\n\n    text: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    bleed: PropTypes.number,\n    printscale: PropTypes.number,\n    cropmark: PropTypes.bool,\n    isUiVisible: PropTypes.bool,\n\n    pScale: PropTypes.number,\n    h1Scale: PropTypes.number,\n\n    // change handlers are automatically generated when given a config.\n    // By default they update that single query parameter and maintain existing\n    // values in the other parameters.\n\n    onChangeText: PropTypes.func.isRequired,\n    onChangeWidth: PropTypes.func.isRequired,\n    onChangeHeight: PropTypes.func.isRequired,\n    onChangeTop: PropTypes.func.isRequired,\n    onChangeRight: PropTypes.func.isRequired,\n    onChangeBottom: PropTypes.func.isRequired,\n    onChangeLeft: PropTypes.func.isRequired,\n    onChangeBleed: PropTypes.func.isRequired,\n    onChangeCropmark: PropTypes.func.isRequired,\n    onChangePrintscale: PropTypes.func.isRequired,\n    onChangeIsUiVisible: PropTypes.func.isRequired,\n\n    onChangePScale: PropTypes.func.isRequired,\n    onChangeH1Scale: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    text: `# 2001\n----\n# space odyssey\n----\n----\n2001: A Space Odyssey is a 1968 science fiction film produced and directed by Stanley Kubrick.\n`,\n    width: 90,\n    height: 130,\n    top: 3,\n    right: 6,\n    bottom: 4,\n    left: 6,\n    bleed: 3,\n    printscale: 100,\n    cropmark: true,\n    isUiVisible: false,\n    pScale: 100,\n    h1Scale: 100,\n  };\n\n  toggleClickHandler = () => {\n    this.props.onChangeIsUiVisible(!this.props.isUiVisible);\n  };\n\n  render() {\n    return (\n      <div className=\"MainPage\">\n        <div>\n          <CSSVariableApplicator\n            variables={{\n              \"--width\": this.props.width,\n              \"--height\": this.props.height,\n              \"--design-grid-top\": this.props.top,\n              \"--design-grid-right\": this.props.right,\n              \"--design-grid-bottom\": this.props.bottom,\n              \"--design-grid-left\": this.props.left,\n              \"--printscale\": this.props.printscale / 100,\n\n              \"--pScale\": this.props.pScale,\n              \"--h1Scale\": this.props.h1Scale,\n            }}\n          />\n\n          <Page text={this.props.text} />\n          <UiToggle\n            isUiVisible={this.props.isUiVisible}\n            toggleClickHandler={this.toggleClickHandler}\n          />\n          <Ui\n            visible={this.props.isUiVisible}\n            text={this.props.text}\n            width={this.props.width}\n            height={this.props.height}\n            top={this.props.top}\n            right={this.props.right}\n            bottom={this.props.bottom}\n            left={this.props.left}\n            bleed={this.props.bleed}\n            printscale={this.props.printscale}\n            cropmark={this.props.cropmark}\n            pScale={this.props.pScale}\n            h1Scale={this.props.h1Scale}\n            changeText={this.props.onChangeText}\n            changeWidth={this.props.onChangeWidth}\n            changeHeight={this.props.onChangeHeight}\n            changeTop={this.props.onChangeTop}\n            changeRight={this.props.onChangeRight}\n            changeBottom={this.props.onChangeBottom}\n            changeLeft={this.props.onChangeLeft}\n            changeBleed={this.props.onChangeBleed}\n            changePrintscale={this.props.onChangePrintscale}\n            changeCropmark={this.props.onChangeCropmark}\n            changePScale={this.props.onChangePScale}\n            changeH1Scale={this.props.onChangeH1Scale}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default addUrlProps({ urlPropsQueryConfig })(MainPage);\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React, { Component } from \"react\";\nimport MainPage from \"../MainPage/\";\nimport history from \"../../history\";\n\nclass App extends Component {\n  componentDidMount() {\n    // force an update if the URL changes\n    history.listen(() => {\n      this.forceUpdate();\n    });\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div>\n        <MainPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { configureUrlQuery } from \"react-url-query\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport history from \"./history\";\n\nconfigureUrlQuery({ history });\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}